{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGridd.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGridd","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACK,sBAAMC,SAZS,SAACC,GACjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOjB,SACG,uBACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,sDCAPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGjC,OADAc,QAAQC,IAAIL,EAAOV,GAEf,sBAAKgB,UAAW,yDAAhB,UACI,qBAAKC,IAAOjB,EAAMkB,IAAOR,IACzB,kCAAKA,EAAL,WCHCS,EAAW,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAEtB,ECHwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAZAC,qBAAY,WAER1B,EAASC,GACJ0B,MAAO,SAAAC,GACJH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAIvB,CAAEtB,IAEGuB,EDjByBK,CAAc5B,GAAjCa,EAAb,EAAQN,KAAae,EAArB,EAAqBA,QAErB,OACI,qCACI,qBAAIJ,UAAY,oDAAhB,cAAsElB,EAAtE,OAGCsB,GAAW,mBAAGJ,UAAY,mDAAf,qBAGZ,qBAAKA,UAAU,YAAf,SAEQL,EAAOJ,KAAM,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEUA,GADCA,EAAIC,aEjB1BkB,EAAe,WAGxB,MAAoC3C,mBAAS,CAAC,gBAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEA,6BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAYA,GADLA,Y,MCZnC+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.69fa2f2b.chunk.js","sourcesContent":["import React, { useState } from 'react'\n// import PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleImputChange = (e) => {\n        setInputValue(e.target.value);\n    }   \n\n    const handleSumit = (e) => {\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2 ) {\n            setCategories(cats => [inputValue, ...cats]);\n            setInputValue('');\n\n        }\n\n    }\n\n    return (\n         <form onSubmit = {handleSumit}>\n            <input\n                type='text'\n                value= {inputValue}\n                onChange={handleImputChange}\n            />\n        </form>\n            \n    )\n}\n\n// AddCategory.propTypes = {\n//     setCategories = PropTypes.func.isRequired \n// }\n","\n\nexport const getGifs = async (category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=94mMSmUZMho7j4RBnWvVhERYolrXxIoc`;\n    const resp = await fetch (url);\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ( {title, url}) => {\n\n    console.log(title, url ); \n    return (\n        <div className= \"card animate__animated animate__bounce animate__fadeIn\">\n            <img src = {url}  alt = {title} />\n            <p> {title} </p>\n        </div>\n    )\n}\n ","\nimport React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGridd = ({category}) => {\n\n    const { data:images, loading } =useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className = \"animate__animated animate__bounce animate__fadeIn\"> {category} </h3>\n\n            {/* {loading ? <p>loading</p> : null} es lo mismo */}\n            {loading && <p className = \"animate__animated animate__bounce animate__flash\">Loading</p>}\n\n\n            <div className=\"card-grid\">\n                {\n                    images.map ( img => (\n                        <GifGridItem \n                            key = {img.id}\n                            { ... img }                \n                        />\n \n                    ))\n                }\n            </div>\n        </> \n    )\n}\n","import { useEffect, useState } from 'react';\nimport {getGifs} from '../helpers/getGifs';\n\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n\n    });\n\n    useEffect ( () => {\n\n        getGifs (category)\n            .then ( imgs => {\n                setstate({ \n                    data: imgs,\n                    loading: false\n                });\n            });\n\n    },[ category ])\n\n    return state;   //data:[], loading: true\n\n}\n","import React, { useState } from 'react';\nimport { AddCategory } from './Components/AddCategory';\nimport { GifGridd } from './Components/GifGridd';\n\nexport const GifExpertApp = () => {\n\n    // const categories = ['Pokemon', 'Samurai X', 'Dragon Ball']\n    const [categories, setCategories] = useState(['Dragon Ball']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories = { setCategories } />\n            <hr />\n            \n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGridd\n                            key = {category}\n                            category = {category} \n                        />\n                    ))\n                }\n            </ol>\n\n        </>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n \nimport {GifExpertApp} from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}